install.packages("swirl")
rm("swirl")
installed.packages()
library("swirl")
install_course("R Programming")
swirl()
5+7
x<-5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z, 555,z)
z*2+100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div<-z/my_sqrt
my_div
c(1,2,3,4)+c(0,10)
c(1,2,3,4)+c(0,10,100)
z*2+1000
my_div
swirl()
getwd()
ls()
x<-9
ls()
dir()
?list.files
args(list.files)
old.dir <- getwd()
testdir <- dir.create(old.dir)
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
?file.rename
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", mytest3.R"")
file.copy("mytest2.R", "mytest3.R"")
file.copy("mytest2.R", "mytest3.R")
?file.path
file.path("mytest.3")
file.path("mytest3.R")
file.path("mytest3.R", "folder1", "folder2")
file.path("folder1", "folder2")
?dir.create
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
?unlink
setwd("old.dir")
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10, by=0,5)
seq(0,10,0.5)
my_seq <- seq(5,10, lenght=30)
my_seq <- seq(5,10, length = 30)
length(my_seq)
1:lenght(my_seq)
1:length(my_seq)
seq(along.with = m_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
q()
library(swirl)
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect<1
tf
num_vect>=6
my_char<- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Doro")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y", "Z"))
paste(c(1:3), c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
2
swirl()
x<- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep (NA, 1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_data)
sum(my_na)
my_data
0/0
Inf/Inf
Inf - Inf
library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x)&x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf =NA)
vect
names()
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix <- matrix(1:20, nrow = 4, ncol =5)
my_matrix2 <- matrix(1:20, nrow = 4, ncol =5)
my_matrix2 <- matrix(data=1:20, nrow = 4, ncol =5)
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol =5)
my_matrix2 <- matrix(data = 1:20, nrow = 4, ncol = 5)
info()
my_matrix2 <- matrix(data = c(1:20), nrow = 4, ncol = 5)
my_matrix2 <- matrix(c(1:20), nrow = 4, ncol = 5)
my_matrix2 <- matrix(data = [1:20], nrow = 4, ncol = 5)
my_matrix2
skip()
nxt()
my_matrix2 <- matrix(1:20, nrow = 4, ncol=5)
identical(my_matrix,my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <-data.frame(patient, my_matrix)
my_data <-data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating")
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data, prefix = cnames)
colnames(my_data) <-cnames
my_data
swirl()
q()
library(swirl)
swirl()
TRUE == TRUE
(FALSE==TRUE)==flase
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!=7
!(5==7)
FALSE&FALSE
TRUE&c(TRUE, FALSE, FALSE)
TRUE &&c(TRUE, FALSE, FALSE)
TRUE|c(TRUE,FALSE,FALSE)
TRUE||c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints>7)
any(ints<0)
all(ints>0)
TRUE == TRUE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
!(5==7)
FALSE&FALSE
TRUE&c(TRUE, FALSE, FALSE)
TRUE &&c(TRUE, FALSE, FALSE)
TRUE|c(TRUE,FALSE,FALSE)
TRUE||c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints >5
which(ints>7)
any(ints<0)
all(ints>0)
Sys.Date()
mean(c)
mean(c(2,4,5))
submit()
boring_function('My first function')
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div=2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1},6)
evaluate(function(x)(x[1]), c(8, 4, 0))
evaluate(function(x)(x[length(x)]), c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("Ojejciu", "jejciu")
submit()
mad_libs("moon", "green", "hammer")
submit()
submit()
submit()
'I'%p%'love'%p%'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
as.POSIXlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
?strptime
t3 <- "October 17, 1986 08:24"
t4 <-  strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() >t1
Sys.time()-t1
difftime(Sys.time(), t1, units = 'days')
x <-1:10
if
if(x>5){x<-0}
q()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
saplly(flag_colors,mean)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,6,6))
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals,length)
sapply(unique_vals,length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
swirl()
sapply(flags, unique)
vaplly(flags, unique, numeric(1))
ok()
sapply(flags, class)
vaplly(flags, class, character(1))
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
q()
library(datasets)
data("iris")
data(iris)
head(iris)
lapply(iris,mean)
mapply(iris,2,mean)
mapply(iris, 2,mean)
?apply
apply(iris, 2,mean)
class(iris)
apply(iris[,1:4], 2, mean)
data("mtcars")
data(mtcars)
?mtcars
mean(mtcars$mpg,mtcars$cyl)
with(mtcars,tapply(mpg, cyl, mean))
sapply(split(mtcars$mpg, mtcars$cyl),mean)
tapply(mtcars$mpg, mtcars$cyl,mean)
head(mtcars)
tapply(mtcars$hp,mtcars$cyl, function(ave){abs(mtcars$cyl==4 - mtcars$cyl==8)})
tapply(mtcars$hp,mtcars$cyl, function(ave){abs(mean(mtcars$cyl==4) - mean(mtcars$cyl==8)})
tapply(mtcars$hp,mtcars$cyl, function(ave){ave = abs(mean(mtcars$cyl==4) - mean(mtcars$cyl==8)})
tapply(mtcars$hp,mtcars$cyl, function(ave) ave = abs(mean(mtcars$cyl==4) - mean(mtcars$cyl==8))
tapply(mtcars$hp,mtcars$cyl, function(ave){ave = abs(mean(mtcars$cyl==4) - mean(mtcars$cyl==8)})
tapply(mtcars$hp,mtcars$cyl, mean)
abs(82.63636-209.21429)
tapply(iris$Sepal.Length, iris$Species, mean)
149+149+30+129
0.85*457
457-149
0.85*308
setwd("C:/Users/Doro/Desktop/R_november/Week_3_Assignment/ProgrammingAssignment2")
